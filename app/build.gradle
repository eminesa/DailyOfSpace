plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.eminesa.photoofspace"
        minSdk 22
        targetSdk 31
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // youtube api key implementation
    implementation files('libs/YouTubeAndroidPlayerApi.jar')

    // Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    // Retrofit with Moshi Converter
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    //Retrofit Logging
    implementation 'com.liulishuo.okdownload:okdownload:1.0.5'
    implementation 'com.liulishuo.okdownload:okhttp:1.0.5'
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$version_lifecycle"

    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-compiler:2.38.1"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'

    // coil for set image
    implementation("io.coil-kt:coil:1.1.1")

    // for splash screen gif
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // image
    implementation 'com.jsibbold:zoomage:1.3.1'
    implementation 'com.jsibbold:zoomage:1.3.1-SNAPSHOT'

    // for memory leak in debug control
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

}

class Utils {
    static def r = new Random(System.currentTimeMillis())
}

static String toJavaCodeString(String string) {
    byte[] b = string.getBytes()
    int c = b.length
    StringBuilder sb = new StringBuilder()

    sb.append("(new Object() {")
    sb.append("int t;")
    sb.append("public String toString() {")
    sb.append("byte[] buf = new byte[")
    sb.append(c)
    sb.append("];")

    for (int i = 0; i < c; ++i) {
        int t = Utils.r.nextInt()
        int f = Utils.r.nextInt(24) + 1

        t = (t & ~(0xff << f)) | (b[i] << f)

        sb.append("t = ")
        sb.append(t)
        sb.append(";")
        sb.append("buf[")
        sb.append(i)
        sb.append("] = (byte) (t >>> ")
        sb.append(f)
        sb.append(");")
    }

    sb.append("return new String(buf);")
    sb.append("}}.toString())")

    return sb.toString()
}